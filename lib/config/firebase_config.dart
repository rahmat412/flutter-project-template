// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, TargetPlatform;
import 'package:flutter_template/config/env_config.dart';

class FirebaseConfig {
  static FirebaseOptions get currentPlatform {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions android = FirebaseOptions(
    apiKey: EnvConfig.firebaseValues.apiKey,
    appId: EnvConfig.firebaseValues.appIdAndroid,
    messagingSenderId: EnvConfig.firebaseValues.messagingSenderId,
    projectId: EnvConfig.firebaseValues.projectId,
    storageBucket: EnvConfig.firebaseValues.storageBucket,
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: EnvConfig.firebaseValues.apiKey,
    appId: EnvConfig.firebaseValues.appIdIos,
    messagingSenderId: EnvConfig.firebaseValues.messagingSenderId,
    projectId: EnvConfig.firebaseValues.projectId,
    storageBucket: EnvConfig.firebaseValues.storageBucket,
    iosBundleId: EnvConfig.firebaseValues.iosBundleId,
  );
}
